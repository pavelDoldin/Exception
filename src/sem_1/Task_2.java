package sem_1;

public class Task_2 {

    /*
    Реализуйте метод, принимающий в качестве аргумента целочисленный массив и некоторое значение.
    Метод ищет в массиве заданное значение и возвращает его индекс. При этом, например:

    если длина массива меньше некоторого заданного минимума, метод возвращает -1, в качестве кода ошибки.
    если искомый элемент не найден, метод вернет -2 в качестве кода ошибки.
    если вместо массива пришел null, метод вернет -3
    придумайте свои варианты исключительных ситуаций и верните соответствующие коды ошибок.

    Напишите метод, в котором реализуйте взаимодействие с пользователем. То есть, этот метод запросит
    искомое число у пользователя, вызовет первый, обработает возвращенное значение и покажет читаемый
    результат пользователю. Например, если вернулся -2, пользователю выведется сообщение: “Искомый элемент не найден”.
     */


    public static int findElement(int[] ints, int minLength, int index){
        if ( ints == null ){
            return -3;
        }
        if ( ints.length < minLength){
            return -1;
        }
        for ( int i = 0; i < ints.length; i++ ) {
            if ( ints[i] == index ){
                return i;
            }

        }
        return -2;
    }

    public static void findElementsMessage(int[] ints, int minLength, int index){

        int result = findElement(ints, minLength, index);

        switch (result) {
            case -1 :
                System.out.println("Длина массива меньше некоторого заданного минимума");
                break;
            case -2 :
                System.out.println("Искомый элемент не найден");
                break;
            case -3 :
                System.out.println("В место массива пришел null");
                break;
            default :
                System.out.printf("Искомый элемент найден %d", result);
        }
    }


}













